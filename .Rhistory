x <- vector("list", length = 5) ## empty list
length(x)
x
student<-c("Dana","Ruth","Ylva","Skylar","Hanna","Sophia","Trevor","Jacob")
sex<-c("f","f","f","f","f","f","m","m")
shoe<-c(12,8,7,6,10.5,8,12,11)
shoes<-as.data.frame(cbind(student,sex,shoe))
shoes[,3]<-as.numeric(as.character(shoes[,3]))
shoes
dat<-read.csv("https://ericcrandall.github.io/BIO444/lessons/R/ostracods.csv")
dat<-read.csv("https://ericcrandall.github.io/BIO444/lessons/R/Ostracods.csv")
dat
pelagics <- read.table("https://ericcrandall.github.io/BIO444/lessons/R/pelagics_metadata.txt",stringsAsFactors = F, sep="\t", header=T)
mylist[3][1]
mylist <- list(the_man = "Madison Bumgarner", b = 1:9, data = head(iris))
mylist
mylist$data[1]
mylist[3][1]
pelagics2<-read.table(file="https://ericcrandall.github.io/BIO444/lessons/R/pelagics_metadata.txt",header=T,sep="\t",stringsAsFactors=F)
pelagics<-read.table(file="https://ericcrandall.github.io/BIO444/lessons/R/pelagics_metadata.txt",header=T,sep="\t",stringsAsFactors=F)
sqrt(0.4)
sqrt(0.3)
sqrt(0.2)
0.447*(1-0.447)*2
library(rentrez)
install.packages("rentrez")
library(devtools)
install_github("bjcochrane/TeachingPopGen")
library(TeachingPopGen)
library(rentrez)
dat.srch <-entrez_search("popset",term="11245776")
dat <-entrez_fetch("popset",id=dat.srch$ids,rettype="fasta",retmode=xml)
write(dat,file="./Data/acp29.fasta")
acp29
acp29 <-read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
getwd()
read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
library(rentrez)
dat.srch <-entrez_search("popset",term="11245776")
dat <-entrez_fetch("popset",id=dat.srch$ids,rettype="fasta",retmode=xml)
write(dat,file="./Data/acp29.fasta")
getwd()
acp29 <-read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta");
read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
acp29
acp29<-scan("./Data/acp29.fasta")
"./Data/acp29.fasta"
acp29<-scan("./Data/acp29.fasta")
getwd()
scan("./Data/acp29.fasta")
scan("./Data/acp29.fasta")
scan("./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
dat.srch <-entrez_search("popset",term="11245776")
dat <-entrez_fetch("popset",id=dat.srch$ids,rettype="fasta",retmode=xml)
write(dat,file="./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
acp29<-scan("./Data/acp29.fasta")
acp29
read.FASTA("./Data/acp29.fasta")
write(dat,file="./Data/acp29.fasta")
acp29 <-read.FASTA("./Data/acp29.fasta")
acp29
names(acp29) <-c(1:17)
acp29
?muscle
read.FASTA("./Data/acp29.fasta")
knitr::opts_chunk$set(echo = TRUE)
acp29
library(rentrez)
library(ape)
install.packages("ggmap")
install.packages("HardyWeinberg")
data(ch6.yri)
dat <-read.csv("http://www.math.uah.edu/stat/data/HorseKicks.csv",row.names=1)
source("http://ljk.imag.fr/membres/Bernard.Ycart/LD/LD.R")
length(LD43a)
LD43a
N <-100000
u <-rpois(N,1)
hist(u,xlab="N",main="Simulated Poisson Distribution, N=10000, Âµ=1")
z <-length(u[u==0])/length(u)
z
x1 <-exp(-1)
x1
fate <-function(c){
x <-rep(0,100) # create a vector of zeros, which will hold the results of the recursion calculation
for(i in 1:99){
x[i+1] <-exp((1+c)*(x[i]-1))
}
return(x)
}
x0 <-fate(0)
x0
ggplot(data=x0, mapping=aes(x=x0))
library(ggplot2)
ggplot(data=x0, mapping=aes(x=x0))
ggplot(data=as.data.frame(x0), mapping=aes(x=x0))
ggplot(data=as.data.frame(x0), mapping=aes(x=x0)) + geom_line() + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
ggplot(data=as.data.frame(x0), mapping=aes(y=x0, x=0:99)) + geom_line() + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
x1 <-fate(.08)
ggplot(data=as.data.frame(x1), mapping=aes(y=x0, x=0:99)) + geom_line() + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
ggplot(data=as.data.frame(x1), mapping=aes(y=x1, x=0:99)) + geom_line() + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
ggplot(data=as.data.frame(x1), mapping=aes(y=x1, x=0:99)) + geom_line() + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
as.data.frame(x0,x1)
ggplot(data=as.data.frame(cbind(x0,x1)), mapping=aes(y=x1, x=0:99)) + geom_line() + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
ggplot(data=as.data.frame(cbind(x0,x1)), mapping=aes(y=x0, x=0:99)) + geom_line() +geom_line(x=0:99, y=x1, color="blue") + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
as.data.frame(cbind(x0,x1))
ggplot(data=as.data.frame(cbind(x0,x1))) + geom_line(aes(x=0:99, y=x0)) +geom_line(aes(x=0:99, y=x1), color="blue") + xlab("Generation") + ylab("Probability") + ggtitle("Probability of Loss of New Mutation")
Q1 <-matrix(c(-3,1,1,1,1,-3,1,1,1,1,-3,1,1,1,1,-3), nrow=4)
Q1
Q2 <-Q1/3
Q2
Qt <-expm(Q2)
Qt
library(phangorn)
library(Matrix)
Qt <-expm(Q2)
Qt
?expm
b <-c(1,0,0,0)
b <-b%*%Qt
b
b <-b%*%Qt
b
b <-b%*%Qt
b
b <-b%*%Qt
b
b <-b%*%Qt
b
b <-b%*%Qt
b
t <-seq(0.1,2,.1)
Q.time <-lapply(t, function (x) expm(Q2*x))
pAA <-sapply(Q.time,function(x) x[1,1])
pAC <-sapply(Q.time,function(x) x[1,2])
p.mat <-cbind(pAA,pAC)
matplot(t,p.mat,type="l",lty=1,xlab="Genetic Distance (ut)",ylab="Transition Probability",main="Jukes-Cantor Model")
abline(h=.25,lty=2)
text(1.5,.5,"A ->A")
text(1.5,.1,"A->C",col="red")
dat <-read.FASTA("../BeastDemo/demo1.fasta")
dat.phy <-phyDat(dat)
dat.mt <-modelTest(dat.phy,G=FALSE,I=FALSE)
dat.mt[with(dat.mt,order(dat.mt$BIC)),]''
setwd("./lessons/Rmd")
dat <-read.FASTA("../BeastDemo/demo1.fasta")
dat.phy <-phyDat(dat)
dat.mt <-modelTest(dat.phy,G=FALSE,I=FALSE)
dat.mt[with(dat.mt,order(dat.mt$BIC)),]
data(furseals)
fur.phy <-phyDat(fur.dat)
data(furseals)
library("TeachingPopGen", lib.loc="~/Library/R/3.3/library")
data(furseals)
fur.phy <-phyDat(fur.dat)
fur.mt <-modelTest(fur.phy,G=FALSE,I=FALSE)
fur.mt[with(fur.mt,order(fur.mt$BIC)),]
Q2
?furseals
??furseals
data(furseals)
fur.dat
str(fur.dat)
class(fur.dat)
save(fur.dat,"../data/furseals.R")
save(fur.dat,file="../data/furseals.R")
?save
save(fur.dat,file="../Data/furseals.R")
load(../Data/furseals.R)
load("../Data/furseals.R")
library(rentrez)
library(ape)
dat.srch <-entrez_search("popset",term="11245776")
dat <-entrez_fetch("popset",id=dat.srch$ids,rettype="fasta",retmode=xml)
write(dat,file="../Data/acp29.fasta")
acp29 <-read.FASTA("../Data/acp29.fasta")
acp29
names(acp29) <-c(1:17)
acp.mat <-muscle(acp29)
names(acp29) <-c(1:17)
acp.mat <-muscle(acp29)
names(acp29) <-c(1:17)
acp.mat <-muscle(acp29)
acp.mat
image.DNAbin(acp.mat,cex=.8)
?image.DNAbin
acp.sites <-seg.sites(acp29)
acp.sites
?pegas
?nuc.div.haplotype
library(TeachingPopGen)
set.seed(123)
rand <-ms(nsam=10, nreps=1,opts="-s 10")
rand <-read.ms.output(txt=rand)
x <-rand$gametes[[1]]
x
spec <-sfs(x)
length(seg.sites(acp29))
dat.rnt <-entrez_search(db="popset",term="322367799")
dat.raw <-entrez_fetch("popset",id=dat.rnt$ids,rettype="fasta")
write(dat.raw,file="../Data/dog.fasta")
dog.dat <-read.FASTA("../Data/dog.fasta")
dog.dat
nms <- names(dog.dat)
nms
nms<- sapply(nms, function(x) word(x,8,9))
names(dog.dat) <- nms
dog.dat
dat.aln <-muscle(dog.dat)
image.DNAbin(dat.aln,cex.lab=.5)
dat.aln.sub <-dat.aln[,1:600]
image.DNAbin(dat.aln.sub,cex.lab=.5)
dat.hap <-haplotype(dat.aln.sub)
dat.hap
dat.dist <-dist.dna(dat.aln.sub)
dat.dist
plot(nj(dat.dist),type="phylo",cex=.8)
net <-haploNet(dat.hap)
fq <-attr(net,"freq")
plot(net,size=fq,threshold=0,cex=.5)
sample.no <-attr(dat.hap,"index")
breed.by.haplo <-sapply(sample.no, function(x) rownames(dat.aln.sub)[x])
sorted <-sapply(breed.by.haplo,paste,collapse=" ")
haplo <-as.roman(1:12)
kable(data.frame(Haplotype=as.character(haplo),Breed=sorted))
library(kable)
library(knitr)
kable(data.frame(Haplotype=as.character(haplo),Breed=sorted))
